# .github/workflows/test.yaml
name: Test Workflow
on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
env:
  home: /home/runner

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_id: ${{ steps.save-image.outputs.image_id }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Ensure Cache Directory Exists
        run: mkdir -p /tmp/.buildx-cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .github/Dockerfile
          push: false
          tags: minirt_env:latest
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Save Docker image to file
        id: save-image
        run: |
          docker save -o minirt_env.tar minirt_env:latest
          echo "::set-output name=image_id::minirt_env.tar"
  
  compilation_test:
    name: Compilation Test
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 2
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang, clang-12]
    steps:
      - name: Checkout source branch of pull request
        uses: actions/checkout@v4
      - name: Load Docker image from file
        run: docker load -i ${{ needs.build.outputs.image_id }}
      - name: ðŸ”¨ Compile with Makefile
        run: docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace minirt_env:latest make CC="${{ matrix.compiler }}"
